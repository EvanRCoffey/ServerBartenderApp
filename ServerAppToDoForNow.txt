ASAP...

1) Finish shift-table-test verion of selecting shift to edit (Mills is on this)

Shifts Table:
Everything is reading in as expected.
Edit buttons work without issue.
There are format and line issues, but I will get those worked out.
Basically don't bother with this section, i'll take care of it.

Shifts Editor:
Everything populates fine except for the date and the shift type dropdown.
(the slider bar doesn't move to match the time, but that is pretty minor).

I will have to modify the date before sending it to handlebars.
I think I know what to do for the dropdown (huge pain, but doable).

The update and delete shift buttons do not send to working routes yet.
I think you can easily point them to one of your existing routes/queries with small modifications.
Be sure the logged in function is set on the route, and the query checks WHERE 
id AND req.user.id. Otherwise it could be exploited.
They should probably redirect to the shifts table once updated/deleted.

If we can get the time to display with AM/PM in browser, and as is in the database, I can use moment.js in node to convert it before sending to handlebars.

2) Once Mills's shift-table-test is done and you get it working with shifts, apply EVERYTHING to jobs/restaurant
3) Debug to the best of your ability - test various things and make sure there are no glaring errors
4) Deploy
5) Test the online version to make sure everything works as expected
6) Give to friends to start using.  Think of ways to get the word out other than just Facebook.

___________________________________________________________________

NEXT STEPS...

1) Insert enough fake shift data with one account to where you can start working on the financial summary (and timeline)

2) Get the financial summary up and working 

3) Allow anybody to log in to the sample account to see how it will look once more data is entered

4) Get the timeline up and working

5) Notify users so they can log in to the sample account to see that, too

...) Goals

...) Menus

...) Flash Card

...) Quiz Maker



See if Sarah can get a bunch of data for you since she's admin at Fleming's.  Make sure that's legal, first.

Decide on a name for the website (already thought of a few - see potentialSiteNames.txt)